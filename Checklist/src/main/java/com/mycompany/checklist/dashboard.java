/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.checklist;

import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author ManiVas
 */
public class dashboard extends javax.swing.JFrame {

     Connection conn = null;
    Statement stmt = null;
    PreparedStatement pst;
    /**
     * Creates new form dashboard
     */
    public dashboard() {
        initComponents();
         Connect();
         table_tipper();
         table_excavator();
         table_drill();
         table_dozer();
         table_grader();
         table_loader();
    }

    public void Connect() {

        try {

            String dbURL = "jdbc:sqlserver://192.168.200.64\\SQLEXPRESS;databaseName=omc;encrypt=true;trustServerCertificate=true;";
            String user = "test";
            String pass = "1234";
            conn = DriverManager.getConnection(dbURL, user, pass);

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
     private void table_tipper() {
       jTable1.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );
         jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
         jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
      jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
      jTable1.getColumnModel().getColumn(3).setPreferredWidth(50);
      jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);
      jTable1.getColumnModel().getColumn(5).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(6).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(7).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(8).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(9).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(10).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(11).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(12).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(13).setPreferredWidth(200);
        jTable1.getColumnModel().getColumn(14).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(15).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(16).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(17).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(18).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(19).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(20).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(21).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(22).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(23).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(24).setPreferredWidth(200);
      jTable1.getColumnModel().getColumn(25).setPreferredWidth(200);
      
        try {
            int c;
            try {
                pst = conn.prepareStatement("Select * from tipper1 ORDER BY date DESC;");
                ResultSet rs = pst.executeQuery();
                ResultSetMetaData rsd = rs.getMetaData();
                c = rsd.getColumnCount();
                DefaultTableModel d = (DefaultTableModel) jTable1.getModel();
                d.setRowCount(0);

                while (rs.next()) {
                    Vector v2 = new Vector();

                    for (int i = 1; i <= c; i++) {
                        v2.add(rs.getString("id"));
                        v2.add(rs.getString("name"));
                        v2.add(rs.getString("equipment"));
                        v2.add(rs.getString("shift"));
                        v2.add(rs.getString("date"));
                        v2.add(rs.getString("c1"));
                        v2.add(rs.getString("c2"));
                        v2.add(rs.getString("c3"));
                        v2.add(rs.getString("c4"));
                        v2.add(rs.getString("c5"));
                        v2.add(rs.getString("c6"));
                        v2.add(rs.getString("c7"));
                        v2.add(rs.getString("c8"));
                        v2.add(rs.getString("c9"));
                        v2.add(rs.getString("c10"));
                        v2.add(rs.getString("c11"));
                        v2.add(rs.getString("c12"));
                        v2.add(rs.getString("c13"));
                        v2.add(rs.getString("c14"));
                        v2.add(rs.getString("c15"));
                        v2.add(rs.getString("c16"));
                        v2.add(rs.getString("c17"));
                        v2.add(rs.getString("c18"));
                        v2.add(rs.getString("c19"));
                        v2.add(rs.getString("c20"));
                        v2.add(rs.getString("remark"));
                        
                    }
                    d.addRow(v2);
                }

            } catch (Exception ex) {

                ex.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
      private void table_excavator() {
       jTable2.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );
          jTable2.getColumnModel().getColumn(0).setPreferredWidth(30);
          jTable2.getColumnModel().getColumn(1).setPreferredWidth(100);
       jTable2.getColumnModel().getColumn(2).setPreferredWidth(80);
       jTable2.getColumnModel().getColumn(3).setPreferredWidth(50);
       jTable2.getColumnModel().getColumn(4).setPreferredWidth(80);
       jTable2.getColumnModel().getColumn(5).setPreferredWidth(200);
       jTable2.getColumnModel().getColumn(6).setPreferredWidth(200);
       jTable2.getColumnModel().getColumn(7).setPreferredWidth(200);
       jTable2.getColumnModel().getColumn(8).setPreferredWidth(200);
       jTable2.getColumnModel().getColumn(9).setPreferredWidth(200);
       jTable2.getColumnModel().getColumn(10).setPreferredWidth(200);
       jTable2.getColumnModel().getColumn(11).setPreferredWidth(200);
       jTable2.getColumnModel().getColumn(12).setPreferredWidth(200);
       jTable2.getColumnModel().getColumn(13).setPreferredWidth(200);
         jTable2.getColumnModel().getColumn(14).setPreferredWidth(200);
       jTable2.getColumnModel().getColumn(15).setPreferredWidth(200);
       jTable2.getColumnModel().getColumn(16).setPreferredWidth(200);
       jTable2.getColumnModel().getColumn(17).setPreferredWidth(200);
       jTable2.getColumnModel().getColumn(18).setPreferredWidth(250);
     
        try {
            int c1;
            try {
                pst = conn.prepareStatement("Select * from excavator ORDER BY date DESC;");
                ResultSet rs1 = pst.executeQuery();
                ResultSetMetaData rsd1 = rs1.getMetaData();
                c1 = rsd1.getColumnCount();
                DefaultTableModel d1 = (DefaultTableModel) jTable2.getModel();
                d1.setRowCount(0);

                while (rs1.next()) {
                    Vector v3 = new Vector();

                    for (int i = 1; i <= c1; i++) {
                        v3.add(rs1.getString("id"));
                        v3.add(rs1.getString("name"));
                        v3.add(rs1.getString("equipment"));
                        v3.add(rs1.getString("shift"));
                        v3.add(rs1.getString("date"));
                        v3.add(rs1.getString("c1"));
                        v3.add(rs1.getString("c2"));
                        v3.add(rs1.getString("c3"));
                        v3.add(rs1.getString("c4"));
                        v3.add(rs1.getString("c5"));
                        v3.add(rs1.getString("c6"));
                        v3.add(rs1.getString("c7"));
                        v3.add(rs1.getString("c8"));
                        v3.add(rs1.getString("c9"));
                        v3.add(rs1.getString("c10"));
                        v3.add(rs1.getString("c11"));
                        v3.add(rs1.getString("c12"));
                        v3.add(rs1.getString("c13"));
                        v3.add(rs1.getString("remark"));
                        
                    }
                    d1.addRow(v3);
                }

            } catch (Exception ex) {

                ex.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
       private void table_drill() {
       jTable3.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );
          jTable3.getColumnModel().getColumn(0).setPreferredWidth(30);
          jTable3.getColumnModel().getColumn(1).setPreferredWidth(100);
       jTable3.getColumnModel().getColumn(2).setPreferredWidth(80);
       jTable3.getColumnModel().getColumn(3).setPreferredWidth(50);
       jTable3.getColumnModel().getColumn(4).setPreferredWidth(80);
       jTable3.getColumnModel().getColumn(5).setPreferredWidth(200);
       jTable3.getColumnModel().getColumn(6).setPreferredWidth(200);
       jTable3.getColumnModel().getColumn(7).setPreferredWidth(200);
       jTable3.getColumnModel().getColumn(8).setPreferredWidth(200);
       jTable3.getColumnModel().getColumn(9).setPreferredWidth(200);
       jTable3.getColumnModel().getColumn(10).setPreferredWidth(200);
       jTable3.getColumnModel().getColumn(11).setPreferredWidth(200);
       jTable3.getColumnModel().getColumn(12).setPreferredWidth(200);
       jTable3.getColumnModel().getColumn(13).setPreferredWidth(200);
         jTable3.getColumnModel().getColumn(14).setPreferredWidth(200);
       jTable3.getColumnModel().getColumn(15).setPreferredWidth(200);
       jTable3.getColumnModel().getColumn(16).setPreferredWidth(200);
       jTable3.getColumnModel().getColumn(17).setPreferredWidth(250);
      
     
        try {
            int c1;
            try {
                pst = conn.prepareStatement("Select * from drilling ORDER BY date DESC;");
                ResultSet rs1 = pst.executeQuery();
                ResultSetMetaData rsd1 = rs1.getMetaData();
                c1 = rsd1.getColumnCount();
                DefaultTableModel d1 = (DefaultTableModel) jTable3.getModel();
                d1.setRowCount(0);

                while (rs1.next()) {
                    Vector v3 = new Vector();

                    for (int i = 1; i <= c1; i++) {
                        v3.add(rs1.getString("id"));
                        v3.add(rs1.getString("name"));
                        v3.add(rs1.getString("equipment"));
                        v3.add(rs1.getString("shift"));
                        v3.add(rs1.getString("date"));
                        v3.add(rs1.getString("c1"));
                        v3.add(rs1.getString("c2"));
                        v3.add(rs1.getString("c3"));
                        v3.add(rs1.getString("c4"));
                        v3.add(rs1.getString("c5"));
                        v3.add(rs1.getString("c6"));
                        v3.add(rs1.getString("c7"));
                        v3.add(rs1.getString("c8"));
                        v3.add(rs1.getString("c9"));
                        v3.add(rs1.getString("c10"));
                        v3.add(rs1.getString("c11"));
                        v3.add(rs1.getString("c12"));
                        v3.add(rs1.getString("remark"));
                        
                    }
                    d1.addRow(v3);
                }

            } catch (Exception ex) {

                ex.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
       private void table_dozer() {
       jTable4.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );
          jTable4.getColumnModel().getColumn(0).setPreferredWidth(30);
          jTable4.getColumnModel().getColumn(1).setPreferredWidth(100);
       jTable4.getColumnModel().getColumn(2).setPreferredWidth(80);
       jTable4.getColumnModel().getColumn(3).setPreferredWidth(50);
       jTable4.getColumnModel().getColumn(4).setPreferredWidth(80);
       jTable4.getColumnModel().getColumn(5).setPreferredWidth(200);
       jTable4.getColumnModel().getColumn(6).setPreferredWidth(200);
       jTable4.getColumnModel().getColumn(7).setPreferredWidth(200);
       jTable4.getColumnModel().getColumn(8).setPreferredWidth(200);
       jTable4.getColumnModel().getColumn(9).setPreferredWidth(200);
       jTable4.getColumnModel().getColumn(10).setPreferredWidth(200);
       jTable4.getColumnModel().getColumn(11).setPreferredWidth(200);
       jTable4.getColumnModel().getColumn(12).setPreferredWidth(200);
       jTable4.getColumnModel().getColumn(13).setPreferredWidth(200);
         jTable4.getColumnModel().getColumn(14).setPreferredWidth(200);
       jTable4.getColumnModel().getColumn(15).setPreferredWidth(200);
       jTable4.getColumnModel().getColumn(16).setPreferredWidth(200);
       jTable4.getColumnModel().getColumn(17).setPreferredWidth(250);
      
     
        try {
            int c1;
            try {
                pst = conn.prepareStatement("Select * from dozer ORDER BY date DESC;");
                ResultSet rs1 = pst.executeQuery();
                ResultSetMetaData rsd1 = rs1.getMetaData();
                c1 = rsd1.getColumnCount();
                DefaultTableModel d1 = (DefaultTableModel) jTable4.getModel();
                d1.setRowCount(0);

                while (rs1.next()) {
                    Vector v3 = new Vector();

                    for (int i = 1; i <= c1; i++) {
                        v3.add(rs1.getString("id"));
                        v3.add(rs1.getString("name"));
                        v3.add(rs1.getString("equipment"));
                        v3.add(rs1.getString("shift"));
                        v3.add(rs1.getString("date"));
                        v3.add(rs1.getString("c1"));
                        v3.add(rs1.getString("c2"));
                        v3.add(rs1.getString("c3"));
                        v3.add(rs1.getString("c4"));
                        v3.add(rs1.getString("c5"));
                        v3.add(rs1.getString("c6"));
                        v3.add(rs1.getString("c7"));
                        v3.add(rs1.getString("c8"));
                        v3.add(rs1.getString("c9"));
                        v3.add(rs1.getString("c10"));
                        v3.add(rs1.getString("c11"));
                        v3.add(rs1.getString("c12"));
                        v3.add(rs1.getString("remark"));
                        
                    }
                    d1.addRow(v3);
                }

            } catch (Exception ex) {

                ex.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
     public void openFile(String file) {
        try {
            File path = new File(file);
            Desktop.getDesktop().open(path);
        } catch (IOException ioe) {
            System.out.println(ioe);
        }
    }
     
     private void table_grader() {
       jTable5.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );
          jTable5.getColumnModel().getColumn(0).setPreferredWidth(30);
          jTable5.getColumnModel().getColumn(1).setPreferredWidth(100);
       jTable5.getColumnModel().getColumn(2).setPreferredWidth(80);
       jTable5.getColumnModel().getColumn(3).setPreferredWidth(50);
       jTable5.getColumnModel().getColumn(4).setPreferredWidth(80);
       jTable5.getColumnModel().getColumn(5).setPreferredWidth(200);
       jTable5.getColumnModel().getColumn(6).setPreferredWidth(200);
       jTable5.getColumnModel().getColumn(7).setPreferredWidth(200);
       jTable5.getColumnModel().getColumn(8).setPreferredWidth(200);
       jTable5.getColumnModel().getColumn(9).setPreferredWidth(200);
       jTable5.getColumnModel().getColumn(10).setPreferredWidth(200);
       jTable5.getColumnModel().getColumn(11).setPreferredWidth(200);
       jTable5.getColumnModel().getColumn(12).setPreferredWidth(200);
       jTable5.getColumnModel().getColumn(13).setPreferredWidth(200);
         jTable5.getColumnModel().getColumn(14).setPreferredWidth(200);
       jTable5.getColumnModel().getColumn(15).setPreferredWidth(200);
       jTable5.getColumnModel().getColumn(16).setPreferredWidth(250);
//       jTable5.getColumnModel().getColumn(17).setPreferredWidth(250);
      
     
        try {
            int c1;
            try {
                pst = conn.prepareStatement("Select * from grader ORDER BY date DESC;");
                ResultSet rs1 = pst.executeQuery();
                ResultSetMetaData rsd1 = rs1.getMetaData();
                c1 = rsd1.getColumnCount();
                DefaultTableModel d1 = (DefaultTableModel) jTable5.getModel();
                d1.setRowCount(0);

                while (rs1.next()) {
                    Vector v3 = new Vector();

                    for (int i = 1; i <= c1; i++) {
                        v3.add(rs1.getString("id"));
                        v3.add(rs1.getString("name"));
                        v3.add(rs1.getString("equipment"));
                        v3.add(rs1.getString("shift"));
                        v3.add(rs1.getString("date"));                       
                        v3.add(rs1.getString("c2"));
                        v3.add(rs1.getString("c3"));
                        v3.add(rs1.getString("c4"));
                        v3.add(rs1.getString("c5"));
                        v3.add(rs1.getString("c6"));
                        v3.add(rs1.getString("c7"));
                        v3.add(rs1.getString("c8"));
                        v3.add(rs1.getString("c9"));
                        v3.add(rs1.getString("c10"));
                        v3.add(rs1.getString("c11"));
                        v3.add(rs1.getString("c12"));
                        v3.add(rs1.getString("remark"));
                        
                    }
                    d1.addRow(v3);
                }

            } catch (Exception ex) {

                ex.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
     private void table_loader() {
       jTable6.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );
         jTable6.getColumnModel().getColumn(0).setPreferredWidth(30);
         jTable6.getColumnModel().getColumn(1).setPreferredWidth(100);
      jTable6.getColumnModel().getColumn(2).setPreferredWidth(80);
      jTable6.getColumnModel().getColumn(3).setPreferredWidth(50);
      jTable6.getColumnModel().getColumn(4).setPreferredWidth(80);
      jTable6.getColumnModel().getColumn(5).setPreferredWidth(200);
      jTable6.getColumnModel().getColumn(6).setPreferredWidth(200);
      jTable6.getColumnModel().getColumn(7).setPreferredWidth(200);
      jTable6.getColumnModel().getColumn(8).setPreferredWidth(200);
      jTable6.getColumnModel().getColumn(9).setPreferredWidth(200);
      jTable6.getColumnModel().getColumn(10).setPreferredWidth(200);
      jTable6.getColumnModel().getColumn(11).setPreferredWidth(200);
      jTable6.getColumnModel().getColumn(12).setPreferredWidth(200);
      jTable6.getColumnModel().getColumn(13).setPreferredWidth(200);
        jTable6.getColumnModel().getColumn(14).setPreferredWidth(200);
      jTable6.getColumnModel().getColumn(15).setPreferredWidth(200);
      jTable6.getColumnModel().getColumn(16).setPreferredWidth(200);
      jTable6.getColumnModel().getColumn(17).setPreferredWidth(200);
      jTable6.getColumnModel().getColumn(18).setPreferredWidth(200);
      jTable6.getColumnModel().getColumn(19).setPreferredWidth(250);
      
        try {
            int c;
            try {
                pst = conn.prepareStatement("Select * from loader ORDER BY date DESC;");
                ResultSet rs = pst.executeQuery();
                ResultSetMetaData rsd = rs.getMetaData();
                c = rsd.getColumnCount();
                DefaultTableModel d = (DefaultTableModel) jTable6.getModel();
                d.setRowCount(0);

                while (rs.next()) {
                    Vector v2 = new Vector();

                    for (int i = 1; i <= c; i++) {
                        v2.add(rs.getString("id"));
                        v2.add(rs.getString("name"));
                        v2.add(rs.getString("equipment"));
                        v2.add(rs.getString("shift"));
                        v2.add(rs.getString("date"));
                        v2.add(rs.getString("c1"));
                        v2.add(rs.getString("c2"));
                        v2.add(rs.getString("c3"));
                        v2.add(rs.getString("c4"));
                        v2.add(rs.getString("c5"));
                        v2.add(rs.getString("c6"));
                        v2.add(rs.getString("c7"));
                        v2.add(rs.getString("c8"));
                        v2.add(rs.getString("c9"));
                        v2.add(rs.getString("c10"));
                        v2.add(rs.getString("c11"));
                        v2.add(rs.getString("c12"));
                        v2.add(rs.getString("c13"));
                        v2.add(rs.getString("c14"));
                        v2.add(rs.getString("remark"));
                        
                    }
                    d.addRow(v2);
                }

            } catch (Exception ex) {

                ex.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
     
     
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_tipper = new javax.swing.JButton();
        btn_excavator = new javax.swing.JButton();
        btn_drilling = new javax.swing.JButton();
        btn_dozer = new javax.swing.JButton();
        btn_grader = new javax.swing.JButton();
        btn_loader = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        home = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tipper_filter = new javax.swing.JTextField();
        tipper_export = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tipper_exit1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        jLabel126 = new javax.swing.JLabel();
        jLabel133 = new javax.swing.JLabel();
        jLabel134 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        ex_exit = new javax.swing.JButton();
        jLabel142 = new javax.swing.JLabel();
        ex_filter = new javax.swing.JTextField();
        ex_export = new javax.swing.JButton();
        jLabel143 = new javax.swing.JLabel();
        home1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        jLabel127 = new javax.swing.JLabel();
        jLabel128 = new javax.swing.JLabel();
        jLabel135 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        drill_exit = new javax.swing.JButton();
        jLabel144 = new javax.swing.JLabel();
        drill_filter = new javax.swing.JTextField();
        drill_export = new javax.swing.JButton();
        jLabel145 = new javax.swing.JLabel();
        home2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        jLabel129 = new javax.swing.JLabel();
        jLabel130 = new javax.swing.JLabel();
        jLabel136 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        dozer_exit = new javax.swing.JButton();
        jLabel146 = new javax.swing.JLabel();
        dozer_filter = new javax.swing.JTextField();
        dozer_export = new javax.swing.JButton();
        jLabel147 = new javax.swing.JLabel();
        home3 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jLabel131 = new javax.swing.JLabel();
        jLabel132 = new javax.swing.JLabel();
        jLabel137 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        grader_exit = new javax.swing.JButton();
        jLabel148 = new javax.swing.JLabel();
        grader_filter = new javax.swing.JTextField();
        grader_export = new javax.swing.JButton();
        jLabel149 = new javax.swing.JLabel();
        home4 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        loader_exit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        loader_filter = new javax.swing.JTextField();
        loader_export = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        home5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_tipper.setBackground(new java.awt.Color(255, 51, 255));
        btn_tipper.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_tipper.setForeground(java.awt.Color.white);
        btn_tipper.setText("Tipper");
        btn_tipper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tipperActionPerformed(evt);
            }
        });
        jPanel1.add(btn_tipper, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 117, -1));

        btn_excavator.setBackground(new java.awt.Color(255, 51, 255));
        btn_excavator.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_excavator.setForeground(java.awt.Color.white);
        btn_excavator.setText("Excavator");
        btn_excavator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excavatorActionPerformed(evt);
            }
        });
        jPanel1.add(btn_excavator, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 120, -1));

        btn_drilling.setBackground(new java.awt.Color(255, 51, 255));
        btn_drilling.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_drilling.setForeground(java.awt.Color.white);
        btn_drilling.setText("Drilling Machine");
        btn_drilling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_drillingActionPerformed(evt);
            }
        });
        jPanel1.add(btn_drilling, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, -1));

        btn_dozer.setBackground(new java.awt.Color(255, 51, 255));
        btn_dozer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_dozer.setForeground(java.awt.Color.white);
        btn_dozer.setText("Dozer");
        btn_dozer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dozerActionPerformed(evt);
            }
        });
        jPanel1.add(btn_dozer, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, 120, -1));

        btn_grader.setBackground(new java.awt.Color(255, 51, 255));
        btn_grader.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_grader.setForeground(java.awt.Color.white);
        btn_grader.setText("Grader");
        btn_grader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_graderActionPerformed(evt);
            }
        });
        jPanel1.add(btn_grader, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 600, 120, -1));

        btn_loader.setBackground(new java.awt.Color(255, 51, 255));
        btn_loader.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_loader.setForeground(java.awt.Color.white);
        btn_loader.setText("Loader");
        btn_loader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loaderActionPerformed(evt);
            }
        });
        jPanel1.add(btn_loader, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 700, 120, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/omc1.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 30, 170, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 180, 780));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setText("C3:     PROPELLER SHAFT GUARD");
        jLabel7.setAlignmentY(0.0F);
        jLabel7.setVerifyInputWhenFocusTarget(false);
        jPanel8.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 390, -1));

        jLabel8.setText("C2:     EXHAUST/RETARDER BRAKE");
        jLabel8.setAlignmentY(0.0F);
        jPanel8.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 470, -1));

        jLabel9.setText("C1:     CABIN GUARD EXTENSION");
        jLabel9.setAlignmentY(0.0F);
        jLabel9.setVerifyInputWhenFocusTarget(false);
        jPanel8.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 520, -1));

        jLabel13.setText("C5:     LIMITING SPEED DEVICE");
        jLabel13.setAlignmentY(0.0F);
        jPanel8.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 440, -1));

        jLabel14.setText("C4:     TAIL GATE PROTECTION");
        jLabel14.setAlignmentY(0.0F);
        jPanel8.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 550, -1));

        jLabel15.setText("C6:     AUDIO VISUAL ALARM WHILE REVERSING");
        jLabel15.setAlignmentY(0.0F);
        jPanel8.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 390, -1));

        jLabel16.setText("C7:     PROVISION OF TWO BRAKES");
        jLabel16.setAlignmentY(0.0F);
        jPanel8.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 210, -1));

        jLabel17.setText("C8:     BODY LIFTING POSITION LOCKING ARRANGEMENT");
        jLabel17.setAlignmentY(0.0F);
        jPanel8.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 410, -1));

        jLabel18.setText("C9:     FIRE SUPRESSION SYSTEM");
        jLabel18.setAlignmentY(0.0F);
        jPanel8.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 460, -1));

        jLabel19.setText("C10:     BLIND SPOT MIRROR");
        jLabel19.setAlignmentY(0.0F);
        jPanel8.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 450, -1));

        jLabel20.setText("C11:     FIRE RESISTANT HOSES AT HOT ZONE");
        jLabel20.setAlignmentY(0.0F);
        jPanel8.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 450, -1));

        jLabel21.setText("C12:     ELECTRIC WIRES & SLEEVES ARE TO BE OF FIRE RESISTANT QUALITY");
        jLabel21.setAlignmentY(0.0F);
        jPanel8.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 470, -1));

        jLabel22.setText("C13:     TURBOCHARGE GUARD & EXHAUST TUBE COATED WITH A HEAT INSULATED PAINT");
        jLabel22.setAlignmentY(0.0F);
        jPanel8.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, 520, -1));

        jLabel23.setText("C15:     RETRO REFLECTIVE REFLECTORS IN ALL SIDES");
        jLabel23.setAlignmentY(0.0F);
        jPanel8.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 130, 440, -1));

        jLabel24.setText("C14:     BATTERY CUT OFF SWITCH");
        jLabel24.setAlignmentY(0.0F);
        jPanel8.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 100, 440, -1));

        jLabel25.setText("C16:     SEAT BELT REMINDER");
        jLabel25.setAlignmentY(0.0F);
        jPanel8.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 160, 440, -1));

        jLabel26.setText("C17:     PROXIMITY WARNING DEVICE ON FRONT & BACK SIDE");
        jLabel26.setAlignmentY(0.0F);
        jPanel8.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 190, 440, -1));

        jLabel10.setText("C18:     REAR VISION SYSTEM");
        jLabel10.setAlignmentY(0.0F);
        jPanel8.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 220, 300, -1));

        jLabel11.setText("C19:     AUTO DIPPING SYSTEM");
        jLabel11.setAlignmentY(0.0F);
        jPanel8.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 250, 350, -1));

        jLabel12.setText("C20:     LOAD INDICATOR AND RECORDER");
        jLabel12.setAlignmentY(0.0F);
        jPanel8.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 280, 420, -1));

        jPanel2.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 1230, 300));

        jScrollPane6.setAutoscrolls(true);
        jScrollPane6.setPreferredSize(new java.awt.Dimension(1110, 80));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name ", "Equipment", "Shift", "Date", "C1", "C2", "C3", "C4", "C5", "C6", "C7", "C8", "C9", "C10", "C11", "C12", "C13", "C14", "C15", "C16", "C17", "C18", "C19", "C20", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoscrolls(false);
        jTable1.setShowGrid(true);
        jScrollPane6.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(19).setResizable(false);
            jTable1.getColumnModel().getColumn(19).setHeaderValue("C15");
            jTable1.getColumnModel().getColumn(20).setResizable(false);
            jTable1.getColumnModel().getColumn(20).setHeaderValue("C16");
            jTable1.getColumnModel().getColumn(21).setResizable(false);
            jTable1.getColumnModel().getColumn(21).setHeaderValue("C17");
            jTable1.getColumnModel().getColumn(22).setResizable(false);
            jTable1.getColumnModel().getColumn(22).setHeaderValue("C18");
            jTable1.getColumnModel().getColumn(23).setResizable(false);
            jTable1.getColumnModel().getColumn(23).setHeaderValue("C19");
            jTable1.getColumnModel().getColumn(24).setResizable(false);
            jTable1.getColumnModel().getColumn(24).setHeaderValue("C20");
        }

        jPanel2.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 1120, 360));
        jScrollPane6.getAccessibleContext().setAccessibleName("");

        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home.png"))); // NOI18N
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        jPanel2.add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 730, 40, 30));

        jLabel1.setText("Search");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 735, -1, -1));

        tipper_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipper_filterActionPerformed(evt);
            }
        });
        jPanel2.add(tipper_filter, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 730, 130, -1));

        tipper_export.setText("Export");
        tipper_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipper_exportActionPerformed(evt);
            }
        });
        jPanel2.add(tipper_export, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 730, 90, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("KODINGAMALI BAUXITE MINES - DASHBOARD_TIPPER");
        jLabel2.setToolTipText("");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1190, -1));

        tipper_exit1.setText("Exit");
        tipper_exit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipper_exit1ActionPerformed(evt);
            }
        });
        jPanel2.add(tipper_exit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 730, 90, 30));

        jTabbedPane1.addTab("tab1", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setText("C3:     SWING MOTOR BRAKE");
        jLabel27.setAlignmentY(0.0F);
        jLabel27.setVerifyInputWhenFocusTarget(false);
        jPanel9.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 390, -1));

        jLabel28.setText("C2:     BATTERY CUT OFF SWITCH");
        jLabel28.setAlignmentY(0.0F);
        jPanel9.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 470, -1));

        jLabel29.setText("C1:     ROLL OVER PROTECTION");
        jLabel29.setAlignmentY(0.0F);
        jLabel29.setVerifyInputWhenFocusTarget(false);
        jPanel9.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 520, -1));

        jLabel30.setText("C5:     HORN");
        jLabel30.setAlignmentY(0.0F);
        jPanel9.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 440, -1));

        jLabel80.setText("C4:     FIRE SUPRESSION SYSTEM");
        jLabel80.setAlignmentY(0.0F);
        jPanel9.add(jLabel80, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 550, -1));

        jLabel81.setText("C6:     FIRE RESISTANT HYDRAULIC HOSES");
        jLabel81.setAlignmentY(0.0F);
        jPanel9.add(jLabel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 390, -1));

        jLabel82.setText("C7:     TURBOCHARGER GUARD");
        jLabel82.setAlignmentY(0.0F);
        jPanel9.add(jLabel82, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 210, -1));

        jLabel95.setText("C8:     ENGINE EXHAUST PIPE WITH HEAT INSULATED PAINT");
        jLabel95.setAlignmentY(0.0F);
        jPanel9.add(jLabel95, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 410, -1));

        jLabel99.setText("C9:     RETRO REFLECTIVE REFLECTORS ON ALL SIDES");
        jLabel99.setAlignmentY(0.0F);
        jPanel9.add(jLabel99, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 460, -1));

        jLabel125.setText("C10:   SEAT BELT REMINDER");
        jLabel125.setAlignmentY(0.0F);
        jPanel9.add(jLabel125, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 450, -1));

        jLabel126.setText("C11:     HYDRAULIC VENT VALVE");
        jLabel126.setAlignmentY(0.0F);
        jPanel9.add(jLabel126, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 450, -1));

        jLabel133.setText("C12:    TRACK MOVEMENT ALARM");
        jLabel133.setAlignmentY(0.0F);
        jPanel9.add(jLabel133, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 470, -1));

        jLabel134.setText("C13:     BEACON LIGHT");
        jLabel134.setAlignmentY(0.0F);
        jPanel9.add(jLabel134, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, 520, -1));

        jPanel3.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 1230, 300));

        jScrollPane7.setAutoscrolls(true);
        jScrollPane7.setPreferredSize(new java.awt.Dimension(1110, 80));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name ", "Equipment", "Shift", "Date", "C1", "C2", "C3", "C4", "C5", "C6", "C7", "C8", "C9", "C10", "C11", "C12", "C13", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setAutoscrolls(false);
        jTable2.setShowGrid(true);
        jScrollPane7.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(17).setHeaderValue("C13");
        }

        jPanel3.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 1120, 360));

        ex_exit.setText("Exit");
        ex_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ex_exitActionPerformed(evt);
            }
        });
        jPanel3.add(ex_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 730, 90, 30));

        jLabel142.setText("Search");
        jPanel3.add(jLabel142, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 735, -1, -1));

        ex_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ex_filterActionPerformed(evt);
            }
        });
        jPanel3.add(ex_filter, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 730, 130, -1));

        ex_export.setText("Export");
        ex_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ex_exportActionPerformed(evt);
            }
        });
        jPanel3.add(ex_export, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 730, 90, 30));

        jLabel143.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel143.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel143.setText("KODINGAMALI BAUXITE MINES - DASHBOARD_EXCAVATOR");
        jLabel143.setToolTipText("");
        jPanel3.add(jLabel143, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1190, -1));

        home1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home.png"))); // NOI18N
        home1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home1ActionPerformed(evt);
            }
        });
        jPanel3.add(home1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 730, 40, 30));

        jTabbedPane1.addTab("tab2", jPanel3);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel31.setText("C3:     FIRE SUPRESSION SYSTEM");
        jLabel31.setAlignmentY(0.0F);
        jLabel31.setVerifyInputWhenFocusTarget(false);
        jPanel10.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 390, -1));

        jLabel32.setText("C2:     EMERGENCY STOP PUSH BUTTON");
        jLabel32.setAlignmentY(0.0F);
        jPanel10.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 470, -1));

        jLabel33.setText("C1:     APPROVED TYPE DUST SUPRESSION SYSTEM");
        jLabel33.setAlignmentY(0.0F);
        jLabel33.setVerifyInputWhenFocusTarget(false);
        jPanel10.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 520, -1));

        jLabel34.setText("C5:     TURBOCHARGER GUARD");
        jLabel34.setAlignmentY(0.0F);
        jPanel10.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 440, -1));

        jLabel83.setText("C4:     FIRE RESISTANT HOSES");
        jLabel83.setAlignmentY(0.0F);
        jPanel10.add(jLabel83, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 550, -1));

        jLabel84.setText("C6:     ENGINE EXHAUST PIPE WITH HEAT INSULATED PAINT");
        jLabel84.setAlignmentY(0.0F);
        jPanel10.add(jLabel84, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 390, -1));

        jLabel85.setText("C7:     BATTERY CUT OFF SWITCH");
        jLabel85.setAlignmentY(0.0F);
        jPanel10.add(jLabel85, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 210, -1));

        jLabel96.setText("C8:     BEACON LIGHT");
        jLabel96.setAlignmentY(0.0F);
        jPanel10.add(jLabel96, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 410, -1));

        jLabel100.setText("C9:     RETRO REFLECTIVE REFLECTORS ON ALL SIDES");
        jLabel100.setAlignmentY(0.0F);
        jPanel10.add(jLabel100, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 460, -1));

        jLabel127.setText("C10:   SEAT BELT REMINDER");
        jLabel127.setAlignmentY(0.0F);
        jPanel10.add(jLabel127, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 450, -1));

        jLabel128.setText("C11:     CABIN FOR OPERATOR");
        jLabel128.setAlignmentY(0.0F);
        jPanel10.add(jLabel128, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 450, -1));

        jLabel135.setText("C12:    DISK BRAKE & BRAKE VALVE");
        jLabel135.setAlignmentY(0.0F);
        jPanel10.add(jLabel135, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 470, -1));

        jPanel4.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 1230, 300));

        jScrollPane8.setAutoscrolls(true);
        jScrollPane8.setPreferredSize(new java.awt.Dimension(1110, 80));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name ", "Equipment", "Shift", "Date", "C1", "C2", "C3", "C4", "C5", "C6", "C7", "C8", "C9", "C10", "C11", "C12", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setAutoscrolls(false);
        jTable3.setShowGrid(true);
        jScrollPane8.setViewportView(jTable3);

        jPanel4.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 1120, 360));

        drill_exit.setText("Exit");
        drill_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drill_exitActionPerformed(evt);
            }
        });
        jPanel4.add(drill_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 730, 90, 30));

        jLabel144.setText("Search");
        jPanel4.add(jLabel144, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 735, -1, -1));

        drill_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drill_filterActionPerformed(evt);
            }
        });
        jPanel4.add(drill_filter, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 730, 130, -1));

        drill_export.setText("Export");
        drill_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drill_exportActionPerformed(evt);
            }
        });
        jPanel4.add(drill_export, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 730, 90, 30));

        jLabel145.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel145.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel145.setText("KODINGAMALI BAUXITE MINES - DASHBOARD_DRILLING MACHINE");
        jLabel145.setToolTipText("");
        jPanel4.add(jLabel145, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1190, -1));

        home2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home.png"))); // NOI18N
        home2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home2ActionPerformed(evt);
            }
        });
        jPanel4.add(home2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 730, 40, 30));

        jTabbedPane1.addTab("tab3", jPanel4);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel35.setText("C3:     BLIND SPOT MIRROR");
        jLabel35.setAlignmentY(0.0F);
        jLabel35.setVerifyInputWhenFocusTarget(false);
        jPanel11.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 390, -1));

        jLabel36.setText("C2:     FIRE SUPRESSION SYSTEM");
        jLabel36.setAlignmentY(0.0F);
        jPanel11.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 470, -1));

        jLabel37.setText("C1:     ROLL OVER PROTECTION");
        jLabel37.setAlignmentY(0.0F);
        jLabel37.setVerifyInputWhenFocusTarget(false);
        jPanel11.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 520, -1));

        jLabel38.setText("C5:     TURBOCHARGER GUARD");
        jLabel38.setAlignmentY(0.0F);
        jPanel11.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 440, -1));

        jLabel86.setText("C4:     FIRE RESISTANT  HYDRAULIC HOSES");
        jLabel86.setAlignmentY(0.0F);
        jPanel11.add(jLabel86, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 550, -1));

        jLabel87.setText("C6:     ENGINE EXHAUST PIPE WITH HEAT INSULATED PAINT");
        jLabel87.setAlignmentY(0.0F);
        jPanel11.add(jLabel87, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 390, -1));

        jLabel88.setText("C7:     BATTERY CUT OFF SWITCH");
        jLabel88.setAlignmentY(0.0F);
        jPanel11.add(jLabel88, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 210, -1));

        jLabel97.setText("C8:     RETRO REFLECTIVE REFLECTORS ON ALL SIDES");
        jLabel97.setAlignmentY(0.0F);
        jPanel11.add(jLabel97, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 410, -1));

        jLabel101.setText("C9:     SEAT BELT REMINDER");
        jLabel101.setAlignmentY(0.0F);
        jPanel11.add(jLabel101, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 460, -1));

        jLabel129.setText("C10:   HYDRAULIC VENT VALVE");
        jLabel129.setAlignmentY(0.0F);
        jPanel11.add(jLabel129, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 450, -1));

        jLabel130.setText("C11:     TRACK MOVEMENT ALARM");
        jLabel130.setAlignmentY(0.0F);
        jPanel11.add(jLabel130, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 450, -1));

        jLabel136.setText("C12:     LIGHTS");
        jLabel136.setAlignmentY(0.0F);
        jPanel11.add(jLabel136, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 470, -1));

        jPanel5.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 1230, 300));

        jScrollPane9.setAutoscrolls(true);
        jScrollPane9.setPreferredSize(new java.awt.Dimension(1110, 80));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name ", "Equipment", "Shift", "Date", "C1", "C2", "C3", "C4", "C5", "C6", "C7", "C8", "C9", "C10", "C11", "C12", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.setAutoscrolls(false);
        jTable4.setShowGrid(true);
        jScrollPane9.setViewportView(jTable4);

        jPanel5.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 1120, 360));

        dozer_exit.setText("Exit");
        dozer_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dozer_exitActionPerformed(evt);
            }
        });
        jPanel5.add(dozer_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 730, 90, 30));

        jLabel146.setText("Search");
        jPanel5.add(jLabel146, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 735, -1, -1));

        dozer_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dozer_filterActionPerformed(evt);
            }
        });
        jPanel5.add(dozer_filter, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 730, 130, -1));

        dozer_export.setText("Export");
        dozer_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dozer_exportActionPerformed(evt);
            }
        });
        jPanel5.add(dozer_export, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 730, 90, 30));

        jLabel147.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel147.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel147.setText("KODINGAMALI BAUXITE MINES - DASHBOARD_DOZER");
        jLabel147.setToolTipText("");
        jPanel5.add(jLabel147, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1190, -1));

        home3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home.png"))); // NOI18N
        home3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home3ActionPerformed(evt);
            }
        });
        jPanel5.add(home3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 730, 40, 30));

        jTabbedPane1.addTab("tab4", jPanel5);

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel39.setText("C3:     AVA DEVICES");
        jLabel39.setAlignmentY(0.0F);
        jLabel39.setVerifyInputWhenFocusTarget(false);
        jPanel12.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 390, -1));

        jLabel40.setText("C2:     ALL FUNCTION CUT OFF SWITCH");
        jLabel40.setAlignmentY(0.0F);
        jPanel12.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 470, -1));

        jLabel42.setText("C5:     TURBO CHARGE GUARD");
        jLabel42.setAlignmentY(0.0F);
        jPanel12.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 440, -1));

        jLabel89.setText("C4:     FIRE RESISTANT HYDRAULIC HOSES & WIRES");
        jLabel89.setAlignmentY(0.0F);
        jPanel12.add(jLabel89, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 550, -1));

        jLabel90.setText("C6:     SEAT BELT");
        jLabel90.setAlignmentY(0.0F);
        jPanel12.add(jLabel90, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 390, -1));

        jLabel91.setText("C7:     VENT VALVE ON TOP OF HYDRAULIC TANK REMOVED ");
        jLabel91.setAlignmentY(0.0F);
        jPanel12.add(jLabel91, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 360, -1));

        jLabel98.setText("C8:     WITHOUT ANY TOOL");
        jLabel98.setAlignmentY(0.0F);
        jPanel12.add(jLabel98, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 410, -1));

        jLabel102.setText("C9:     FRONT & REAR LIGHT WITH A PORTABLE LAMP");
        jLabel102.setAlignmentY(0.0F);
        jPanel12.add(jLabel102, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 460, -1));

        jLabel131.setText("C10:   RETRACEABLE LADDER TO MOUNT ONTO THE MACHINE");
        jLabel131.setAlignmentY(0.0F);
        jPanel12.add(jLabel131, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 450, -1));

        jLabel132.setText("C11:     REAR VISION CAMERA");
        jLabel132.setAlignmentY(0.0F);
        jPanel12.add(jLabel132, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 450, -1));

        jLabel137.setText("C12:     OPERATOR FATIGUE DEVICE");
        jLabel137.setAlignmentY(0.0F);
        jPanel12.add(jLabel137, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, 470, -1));

        jPanel6.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 1230, 300));

        jScrollPane10.setAutoscrolls(true);
        jScrollPane10.setPreferredSize(new java.awt.Dimension(1110, 80));

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name ", "Equipment", "Shift", "Date", "C2", "C3", "C4", "C5", "C6", "C7", "C8", "C9", "C10", "C11", "C12", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.setAutoscrolls(false);
        jTable5.setShowGrid(true);
        jScrollPane10.setViewportView(jTable5);

        jPanel6.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 1120, 360));

        grader_exit.setText("Exit");
        grader_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grader_exitActionPerformed(evt);
            }
        });
        jPanel6.add(grader_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 730, 90, 30));

        jLabel148.setText("Search");
        jPanel6.add(jLabel148, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 735, -1, -1));

        grader_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grader_filterActionPerformed(evt);
            }
        });
        jPanel6.add(grader_filter, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 730, 130, -1));

        grader_export.setText("Export");
        grader_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grader_exportActionPerformed(evt);
            }
        });
        jPanel6.add(grader_export, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 730, 90, 30));

        jLabel149.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel149.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel149.setText("KODINGAMALI BAUXITE MINES - DASHBOARD_GRADER");
        jLabel149.setToolTipText("");
        jPanel6.add(jLabel149, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1190, -1));

        home4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home.png"))); // NOI18N
        home4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home4ActionPerformed(evt);
            }
        });
        jPanel6.add(home4, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 730, 40, 30));

        jTabbedPane1.addTab("tab5", jPanel6);

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel43.setText("C3:     REVERSE GEAR VISUAL ALARM");
        jLabel43.setAlignmentY(0.0F);
        jLabel43.setVerifyInputWhenFocusTarget(false);
        jPanel13.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 390, -1));

        jLabel44.setText("C2:     REVERSE GEAR AUDIO ALARM");
        jLabel44.setAlignmentY(0.0F);
        jPanel13.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 470, -1));

        jLabel45.setText("C1:     BEACON LIGHT");
        jLabel45.setAlignmentY(0.0F);
        jLabel45.setVerifyInputWhenFocusTarget(false);
        jPanel13.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 520, -1));

        jLabel46.setText("C5:     HYDRAULIC VENT VALVE");
        jLabel46.setAlignmentY(0.0F);
        jPanel13.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 440, -1));

        jLabel47.setText("C4:     PROVISION OF TWO BRAKES");
        jLabel47.setAlignmentY(0.0F);
        jPanel13.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 550, -1));

        jLabel48.setText("C6:     FIRE SUPRESSION SYSTEM");
        jLabel48.setAlignmentY(0.0F);
        jPanel13.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 390, -1));

        jLabel49.setText("C7:     BLIND SPOT MIRROR");
        jLabel49.setAlignmentY(0.0F);
        jPanel13.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 210, -1));

        jLabel50.setText("C8:     FIRE RESISTANT HOSES");
        jLabel50.setAlignmentY(0.0F);
        jPanel13.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 410, -1));

        jLabel51.setText("C9:     TURBOCHARGER GUARD");
        jLabel51.setAlignmentY(0.0F);
        jPanel13.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 460, -1));

        jLabel52.setText("C10:    ENGINE EXHAUST PIPE WITH HEAT INSULATED PAINT");
        jLabel52.setAlignmentY(0.0F);
        jPanel13.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 450, -1));

        jLabel53.setText("C11:     BATTERY CUT OFF SWITCH");
        jLabel53.setAlignmentY(0.0F);
        jPanel13.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 450, -1));

        jLabel54.setText("C12:     RETRO REFLECTIVE REFLECTORS ON ALL SIDES");
        jLabel54.setAlignmentY(0.0F);
        jPanel13.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 470, -1));

        jLabel55.setText("C13:     SEAT BELT REMINDER");
        jLabel55.setAlignmentY(0.0F);
        jPanel13.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, 520, -1));

        jLabel57.setText("C14:     REAR VISION SYSTEM");
        jLabel57.setAlignmentY(0.0F);
        jPanel13.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 100, 440, -1));

        jPanel7.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 1230, 300));

        jScrollPane11.setAutoscrolls(true);
        jScrollPane11.setPreferredSize(new java.awt.Dimension(1110, 80));

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name ", "Equipment", "Shift", "Date", "C1", "C2", "C3", "C4", "C5", "C6", "C7", "C8", "C9", "C10", "C11", "C12", "C13", "C14", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable6.setAutoscrolls(false);
        jTable6.setShowGrid(true);
        jScrollPane11.setViewportView(jTable6);

        jPanel7.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 1120, 360));

        loader_exit.setText("Exit");
        loader_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loader_exitActionPerformed(evt);
            }
        });
        jPanel7.add(loader_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 730, 90, 30));

        jLabel4.setText("Search");
        jPanel7.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 735, -1, -1));

        loader_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loader_filterActionPerformed(evt);
            }
        });
        jPanel7.add(loader_filter, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 730, 130, -1));

        loader_export.setText("Export");
        loader_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loader_exportActionPerformed(evt);
            }
        });
        jPanel7.add(loader_export, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 730, 90, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("KODINGAMALI BAUXITE MINES - DASHBOARD LOADER");
        jLabel5.setToolTipText("");
        jPanel7.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1190, -1));

        home5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home.png"))); // NOI18N
        home5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home5ActionPerformed(evt);
            }
        });
        jPanel7.add(home5, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 730, 40, 30));

        jTabbedPane1.addTab("tab6", jPanel7);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, -40, 1510, 810));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_tipperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tipperActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_btn_tipperActionPerformed

    private void btn_excavatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excavatorActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_btn_excavatorActionPerformed

    private void btn_drillingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_drillingActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_btn_drillingActionPerformed

    private void btn_dozerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dozerActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_btn_dozerActionPerformed

    private void btn_graderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_graderActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_btn_graderActionPerformed

    private void btn_loaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loaderActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(5);
    }//GEN-LAST:event_btn_loaderActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // TODO add your handling code here:
       index.main(null);
       super.dispose();
    }//GEN-LAST:event_homeActionPerformed

    private void tipper_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipper_exportActionPerformed
        // TODO add your handling code here:
         try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();

            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("shift_report");

                org.apache.poi.ss.usermodel.Row rowCol = sheet.createRow(0);
                for (int i = 0; i < jTable1.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(jTable1.getColumnName(i));
                }

                for (int j = 0; j < jTable1.getRowCount(); j++) {
                    org.apache.poi.ss.usermodel.Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < jTable1.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (jTable1.getValueAt(j, k) != null) {
                            cell.setCellValue(jTable1.getValueAt(j, k).toString());
                        }
                    }
                }
                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                // wb.close();
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error in Report Generation");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }

    }//GEN-LAST:event_tipper_exportActionPerformed

    private void tipper_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipper_filterActionPerformed
        // TODO add your handling code here:
        
         TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) jTable1.getModel()));
        sorter.setRowFilter(RowFilter.regexFilter(tipper_filter.getText()));

        jTable1.setRowSorter(sorter);
    }//GEN-LAST:event_tipper_filterActionPerformed

    private void ex_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ex_exitActionPerformed
        // TODO add your handling code here:
         JFrame frame = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(frame, "Do you really want to exit...", "Alert Message", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
            System.exit(0);

        }
    }//GEN-LAST:event_ex_exitActionPerformed

    private void ex_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ex_filterActionPerformed
        // TODO add your handling code here:
         TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) jTable2.getModel()));
        sorter.setRowFilter(RowFilter.regexFilter(ex_filter.getText()));

        jTable2.setRowSorter(sorter);
    }//GEN-LAST:event_ex_filterActionPerformed

    private void ex_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ex_exportActionPerformed
        // TODO add your handling code here:
         try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();

            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("shift_report");

                org.apache.poi.ss.usermodel.Row rowCol = sheet.createRow(0);
                for (int i = 0; i < jTable2.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(jTable2.getColumnName(i));
                }

                for (int j = 0; j < jTable2.getRowCount(); j++) {
                    org.apache.poi.ss.usermodel.Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < jTable2.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (jTable2.getValueAt(j, k) != null) {
                            cell.setCellValue(jTable2.getValueAt(j, k).toString());
                        }
                    }
                }
                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                // wb.close();
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error in Report Generation");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }
    }//GEN-LAST:event_ex_exportActionPerformed

    private void drill_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drill_exitActionPerformed
        // TODO add your handling code here:
          JFrame frame = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(frame, "Do you really want to exit...", "Alert Message", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
            System.exit(0);

        }
    }//GEN-LAST:event_drill_exitActionPerformed

    private void drill_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drill_filterActionPerformed
        // TODO add your handling code here:
         TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) jTable3.getModel()));
        sorter.setRowFilter(RowFilter.regexFilter(drill_filter.getText()));

        jTable3.setRowSorter(sorter);
    }//GEN-LAST:event_drill_filterActionPerformed

    private void drill_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drill_exportActionPerformed
        // TODO add your handling code here:
         try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();

            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("shift_report");

                org.apache.poi.ss.usermodel.Row rowCol = sheet.createRow(0);
                for (int i = 0; i < jTable3.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(jTable3.getColumnName(i));
                }

                for (int j = 0; j < jTable3.getRowCount(); j++) {
                    org.apache.poi.ss.usermodel.Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < jTable3.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (jTable3.getValueAt(j, k) != null) {
                            cell.setCellValue(jTable3.getValueAt(j, k).toString());
                        }
                    }
                }
                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                // wb.close();
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error in Report Generation");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }
    }//GEN-LAST:event_drill_exportActionPerformed

    private void dozer_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dozer_exitActionPerformed
        // TODO add your handling code here:
          JFrame frame = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(frame, "Do you really want to exit...", "Alert Message", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
            System.exit(0);

        }
    }//GEN-LAST:event_dozer_exitActionPerformed

    private void dozer_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dozer_filterActionPerformed
        // TODO add your handling code here:
            TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) jTable4.getModel()));
        sorter.setRowFilter(RowFilter.regexFilter(dozer_filter.getText()));

        jTable4.setRowSorter(sorter);
    }//GEN-LAST:event_dozer_filterActionPerformed

    private void dozer_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dozer_exportActionPerformed
        // TODO add your handling code here:
         try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();

            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("shift_report");

                org.apache.poi.ss.usermodel.Row rowCol = sheet.createRow(0);
                for (int i = 0; i < jTable4.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(jTable4.getColumnName(i));
                }

                for (int j = 0; j < jTable4.getRowCount(); j++) {
                    org.apache.poi.ss.usermodel.Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < jTable4.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (jTable4.getValueAt(j, k) != null) {
                            cell.setCellValue(jTable4.getValueAt(j, k).toString());
                        }
                    }
                }
                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                // wb.close();
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error in Report Generation");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }
    }//GEN-LAST:event_dozer_exportActionPerformed

    private void grader_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grader_exitActionPerformed
        // TODO add your handling code here:
          JFrame frame = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(frame, "Do you really want to exit...", "Alert Message", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
            System.exit(0);

        }
        
    }//GEN-LAST:event_grader_exitActionPerformed

    private void grader_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grader_filterActionPerformed
        // TODO add your handling code here:
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) jTable5.getModel()));
        sorter.setRowFilter(RowFilter.regexFilter(grader_filter.getText()));

        jTable5.setRowSorter(sorter);
    }//GEN-LAST:event_grader_filterActionPerformed

    private void grader_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grader_exportActionPerformed
        // TODO add your handling code here:
         try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();

            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("shift_report");

                org.apache.poi.ss.usermodel.Row rowCol = sheet.createRow(0);
                for (int i = 0; i < jTable5.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(jTable5.getColumnName(i));
                }

                for (int j = 0; j < jTable5.getRowCount(); j++) {
                    org.apache.poi.ss.usermodel.Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < jTable5.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (jTable5.getValueAt(j, k) != null) {
                            cell.setCellValue(jTable5.getValueAt(j, k).toString());
                        }
                    }
                }
                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                // wb.close();
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error in Report Generation");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }
    }//GEN-LAST:event_grader_exportActionPerformed

    private void loader_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loader_exitActionPerformed
        // TODO add your handling code here:
           JFrame frame = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(frame, "Do you really want to exit...", "Alert Message", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
            System.exit(0);

        }
    }//GEN-LAST:event_loader_exitActionPerformed

    private void loader_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loader_filterActionPerformed
        // TODO add your handling code here:
          TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) jTable6.getModel()));
        sorter.setRowFilter(RowFilter.regexFilter(loader_filter.getText()));

        jTable6.setRowSorter(sorter);
    }//GEN-LAST:event_loader_filterActionPerformed

    private void loader_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loader_exportActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();

            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("shift_report");

                org.apache.poi.ss.usermodel.Row rowCol = sheet.createRow(0);
                for (int i = 0; i < jTable6.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(jTable6.getColumnName(i));
                }

                for (int j = 0; j < jTable6.getRowCount(); j++) {
                    org.apache.poi.ss.usermodel.Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < jTable6.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (jTable6.getValueAt(j, k) != null) {
                            cell.setCellValue(jTable6.getValueAt(j, k).toString());
                        }
                    }
                }
                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                // wb.close();
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error in Report Generation");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }
    }//GEN-LAST:event_loader_exportActionPerformed

    private void tipper_exit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipper_exit1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipper_exit1ActionPerformed

    private void home1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home1ActionPerformed
        // TODO add your handling code here:
        index.main(null);
        super.dispose();
    }//GEN-LAST:event_home1ActionPerformed

    private void home2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home2ActionPerformed
        // TODO add your handling code here:
        index.main(null);
        super.dispose();
    }//GEN-LAST:event_home2ActionPerformed

    private void home3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home3ActionPerformed
        // TODO add your handling code here:
        index.main(null);
        super.dispose();
    }//GEN-LAST:event_home3ActionPerformed

    private void home4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home4ActionPerformed
        // TODO add your handling code here:
        index.main(null);
        super.dispose();
    }//GEN-LAST:event_home4ActionPerformed

    private void home5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home5ActionPerformed
        // TODO add your handling code here:
        index.main(null);
       super.dispose();
    }//GEN-LAST:event_home5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_dozer;
    private javax.swing.JButton btn_drilling;
    private javax.swing.JButton btn_excavator;
    private javax.swing.JButton btn_grader;
    private javax.swing.JButton btn_loader;
    private javax.swing.JButton btn_tipper;
    private javax.swing.JButton dozer_exit;
    private javax.swing.JButton dozer_export;
    private javax.swing.JTextField dozer_filter;
    private javax.swing.JButton drill_exit;
    private javax.swing.JButton drill_export;
    private javax.swing.JTextField drill_filter;
    private javax.swing.JButton ex_exit;
    private javax.swing.JButton ex_export;
    private javax.swing.JTextField ex_filter;
    private javax.swing.JButton grader_exit;
    private javax.swing.JButton grader_export;
    private javax.swing.JTextField grader_filter;
    private javax.swing.JButton home;
    private javax.swing.JButton home1;
    private javax.swing.JButton home2;
    private javax.swing.JButton home3;
    private javax.swing.JButton home4;
    private javax.swing.JButton home5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel142;
    private javax.swing.JLabel jLabel143;
    private javax.swing.JLabel jLabel144;
    private javax.swing.JLabel jLabel145;
    private javax.swing.JLabel jLabel146;
    private javax.swing.JLabel jLabel147;
    private javax.swing.JLabel jLabel148;
    private javax.swing.JLabel jLabel149;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JButton loader_exit;
    private javax.swing.JButton loader_export;
    private javax.swing.JTextField loader_filter;
    private javax.swing.JButton tipper_exit1;
    private javax.swing.JButton tipper_export;
    private javax.swing.JTextField tipper_filter;
    // End of variables declaration//GEN-END:variables
}
